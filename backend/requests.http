@baseUrl = http://localhost:3000

### CREATE USER
POST {{baseUrl}}/user
Content-Type: application/json

{
    "username": "johndoe",
    "password": "johndoe"
}

### login as user
# @name login
POST {{baseUrl}}/user/login
Content-Type: application/json

{
    "username": "johndoe",
    "password": "johndoe"
}

###
@authToken = {{login.response.body.token}}
@userId = {{login.response.body.uid}}

### GET USER BY UID
GET {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}

### USER UPDATE AND DELETE TEST CASES

### Update user (authorized) - Change username
PUT {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "username": "johndoe_updated"
}

### Update user (authorized) - Change password
PUT {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "password": "new_password123"
}

### Update user (authorized) - Change both username and password
PUT {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "username": "johndoe_new",
  "password": "secure_password"
}

### Update user without any data to update
PUT {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
}

### Delete user (authorized)
DELETE {{baseUrl}}/user/{{userId}}
Authorization: Bearer {{authToken}}

### MESSAGE TEST CASES

### Get messages with another user
GET {{baseUrl}}/message/{{userId}}?receiverId=2
Authorization: Bearer {{authToken}}

### Get messages (unauthorized - wrong user)
GET {{baseUrl}}/message/2?receiverId=1
Authorization: Bearer {{authToken}}

### Send message
POST {{baseUrl}}/message/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "receiverId": 2,
    "content": "Hello, this is a test message."
}

### Send message (unauthorized - wrong user)
POST {{baseUrl}}/message/2
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "receiverId": 1,
    "content": "This should fail because we're trying to send as user 2."
}

### Send message to non-contact user
POST {{baseUrl}}/message/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "receiverId": 5,
    "content": "Hello, this is a test message to a non-contact."
}

### Send message to blocked user
POST {{baseUrl}}/message/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "receiverId": 4,
    "content": "Hello, this is a test message to a blocked user."
}

### Store decrypted messages - fixed format
POST {{baseUrl}}/message/decrypted/{{userId}}
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "content": [
        {
            "sender_uid": 1,
            "receiver_uid": 2,
            "content": "Hello, this is a decrypted message.",
            "timestamp": "2023-05-06T10:00:00Z"
        },
        {
            "sender_uid": 1,
            "receiver_uid": 2,
            "content": "This is another decrypted message.",
            "timestamp": "2023-05-06T10:01:00Z"
        }
    ]
}
